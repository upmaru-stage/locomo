name: 'Deployment'

on:
  push:
    branches:
      - main
      - master
      - develop

jobs:
  build_and_deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
          fetch-depth: 0

      - name: 'Setup Alpine'
        uses: zacksiri/setup-alpine@master
        with:
          branch: v3.18
          packages: |
            zip
            tar
            sudo
            alpine-sdk
            coreutils
            cmake
            elixir

      - name: 'Setup Build Environment'
        run: |
          sudo addgroup runner abuild

          mix local.rebar --force
          mix local.hex --force
          mix escript.install github upmaru/pakman branch feature/chroot-alpine --force

          ~/.mix/escripts/pakman --command bootstrap

          ls -la
        shell: alpine.sh {0}
        env:
          MIX_ENV: prod
          PATH: ""
          ABUILD_PRIVATE_KEY: ${{secrets.ABUILD_PRIVATE_KEY}}
          ABUILD_PUBLIC_KEY: ${{secrets.ABUILD_PUBLIC_KEY}}

      # - name: 'Pakman'
      #   uses: upmaru/pakman@develop
      #   with:
      #     command: 'bootstrap'
      #   env:
      #     ABUILD_PRIVATE_KEY: ${{secrets.ABUILD_PRIVATE_KEY}}
      #     ABUILD_PUBLIC_KEY: ${{secrets.ABUILD_PUBLIC_KEY}}

      # - name: 'Build APK'
      #   uses: upmaru/pakman@develop
      #   with:
      #     entrypoint: /var/lib/pakman/bin/build.sh

      # - name: 'Archive'
      #   uses: upmaru/pakman@develop
      #   with:
      #     entrypoint: /var/lib/pakman/bin/archive.sh

      # - name: 'Create Deployment'
      #   uses: upmaru/pakman@develop
      #   with:
      #     command: 'create_deployment'
      #     archive: 'packages.zip'
      #   env:
      #     WORKFLOW_REF: ${{ github.ref }}
      #     WORKFLOW_SHA: ${{ github.sha }}
      #     INSTELLAR_ENDPOINT: https://sandbox.opsmaru.dev
      #     INSTELLAR_PACKAGE_TOKEN: ${{secrets.INSTELLAR_PACKAGE_TOKEN}}
      #     INSTELLAR_AUTH_TOKEN: ${{secrets.INSTELLAR_AUTH_TOKEN}}
